Graph databases

Roman Buzuk
Golang software engineer

* What is graph databases?

Graph DB is a database that uses graph structures for semantic queries with nodes, edges and properties to represent and store data. A key concept of the system is the graph (or edge or relationship), which directly relates data items in the store a collection of nodes of data and edges representing the relationships between the nodes.
.image GraphDatabase_PropertyGraph.png

* Types of objects in Graph DB

- Nodes
- Edges
- Properties

* Usage of graph DB
1. Recommendation engines
2. Fraud detection
3. Network and IT operations
4. Search
5. Master data management
6. Identity and access management
7. Machine learning

* Popularity of graph DB
.image popularity.png

* Popularity comparison
.image graph_rank.png

* Total popularity
.image rank1.png

.image rank2.png

* Popularity in percents
.image total.png

* Neo4j properties
- Implemented in Java
- Full ACID (Atomicity, Consistency, Isolation, Durability) support
- On the CA side of the CAP triangle
- REST-server and a web front-end
- Open-source and Enterprise edition( with online backup and high availability extensions )
- Use Cypher query language
- Can operate with db using Java API, Gremlin language
- Officially supports the drivers for .Net, Java, JavaScript, Go, and Python for the binary Bolt protocol.
- JetBrain plugin
.link https://github.com/neueda/jetbrains-plugin-graph-database-support

* Browser
.image browser.png

* Cypher language

SQL-like + ASCII-Art syntax

.code code.cq /START FIRST EXAMPLE/,/END FIRST EXAMPLE/

* Main commands and keywords
- MATCH  - to select data
- RETURN - to return value
- CREATE - to create node or relationship
- DELETE - to delete node or relationship (DETACH DELETE - to delete node and all its relationships)
- SET - to update property of node or relationship
- REMOVE - to delete property ( == SET property = null)
- MERGE  - “select-or-insert”
- WHERE - condition of query
- count(),collect() - aggregation
- ORDER BY - to sort
- LIMIT - to limit

* Example

We can use for neo4j sandbox for testing

.link https://neo4j.com/sandbox-v2/ Sandbox

* Dgraph
.link https://github.com/dgraph-io/dgraph

- Implemented in Go
- Use own query language similar to GraphQL( GraphQL+)
- show better results in own benchmark
.link https://blog.dgraph.io/post/benchmark-neo4j/ benchmark

* OrientDB
.link https://orientdb.com
- Multi-model database ( supports graph, document, key/value)
- Use SQL-like language
- Supports Gremlin language
- Driver for Go is old
- is 10X faster than Neo4j on Graph operations among all the workloads ( from old benchmark)

* ArangoDB
.link https://www.arangodb.com
- Multi-model database ( supports graph, documents, key/value)
- Good results in own benchmark
- SQL-like query language (AQL)
- Official Go driver
